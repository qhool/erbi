{neo4j,
 [
  %% test transactionl endpoint (/db/data/transaction)
  %% {transaction_datasource,"erbi:neo4j"},
     {transaction_datasource,"erbi:temp:base_driver=neo4j"},
  %% test older cypher endpoint (/db/data/cypher)
  %% {cypher_datasource,"erbi:neo4j:endpoint=cypher"}
  {cypher_datasource,"erbi:temp:base_driver=neo4j;endpoint=cypher"},
  %% uncomment to test writes to the database
  %% these tests function within a transaction only
  transactional_write,
  %% uncomment to test committed writes
  nontransactional_write,
  %% this is here because erlang can't handle trailing commas
  the_end
 ]
}.
{epgsql,
 [
 %% { datasource , "erbi:epgsql:database=mydatabase"},
  { datasource , "erbi:temp:base_driver=epgsql;temp_timeout=360"},

  { user , ""},
  { password , ""}
]
}.

{epgsql_pooled,
    [
        %% { datasource , "erbi:epgsql:database=mydatabase"},
        { datasource , "erbi:temp:base_driver=epgsql;pool_name=test;pool_size=2;pool_max_overflow=5;temp_timeout=360"},
        { user , ""},
        { password , ""}
    ]}.
{epgsql_temp,
[{data_dir,"tmp_data/temp_db_data_test"},
{sql_init_files,"test/drivers/epgsql_temp/schema.sql,test/drivers/epgsql_temp/data.sql"}]
}.
{neo4j_temp,
[{data_dir,"tmp_data/temp_db_data_test"},
{neo4j_init_files,"test/drivers/neo4j_temp/data.cypher"}]
}.
{dummy_temp,
[{data_dir,"tmp_data/temp_db_data_test"}]
}.
